{
	"info": {
		"_postman_id": "d2151ace-7c3e-4af2-b5b9-cbc879ecd552",
		"name": "Techies-match",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42925936"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Linkedin",
					"item": [
						{
							"name": "Positive Check login redirect",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check if response status is 307\", function () {\r",
											"    pm.response.to.have.status(307);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if redirection location is correct\", function () {\r",
											"    pm.response.to.have.header(\"Location\");\r",
											"    pm.expect(pm.response.headers.get(\"Location\")).to.include(\"https://www.linkedin.com/oauth/v2/authorization\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/linkedin/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"linkedin",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Negative  validate successful login  || invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains correct error message\", function () {\r",
											"    let jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.include(\"Invalid access token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{wrong_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.linkedin.com/v2/me",
									"protocol": "https",
									"host": [
										"api",
										"linkedin",
										"com"
									],
									"path": [
										"v2",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Negative  validate successful login  || empty token value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains correct error message\", function () {\r",
											"    let jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.include(\"Invalid access token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{wrong_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.linkedin.com/v2/me",
									"protocol": "https",
									"host": [
										"api",
										"linkedin",
										"com"
									],
									"path": [
										"v2",
										"me"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Interest Tagging",
			"item": [
				{
					"name": "Positive - Add interest || valid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 200 OK\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// Validate the response message\r",
									"pm.test(\"Response message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Interests added successfully\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"interests\": [\r\n    \"Python\",\r\n    \"JavaScript\",\r\n    \"React\",\r\n    \"AI\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative - Add interest || Empty interest list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 422 Unprocessable Entity\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// Validate the error message\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Invalid input\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"interest\": [\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Positive- Retrieve user interest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 200 OK\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Validate the response message\r",
									"pm.test(\"Response message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Interests retrieved successfully\");\r",
									"});\r",
									"\r",
									"// Check if skills array exists and is not empty\r",
									"pm.test(\"'Interests list is returned\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"data\").that.is.an(\"array\").that.is.not.empty;\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Positive - Update Interests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 200 OK\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Validate the response message\r",
									"pm.test(\"Response message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"interests updated successfully\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"interests\": [\"AI\", \"Machine Learning\", \"llm\"]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative - Update Interest || Wrong Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 422 Unprocessable Entity\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// Validate the error message\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Invalid input\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"interest\": []}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative - Update Interest || Invalid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 422 Unprocessable Entity\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// Validate the error message\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Invalid input\");\r",
									"});\r",
									"\r",
									"// Ensure that the \"skills\" field must be an array\r",
									"pm.test(\"Skills field should be an array\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"errors\").that.is.an(\"array\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"interests\": \"not_an_array\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Positive - delete all interests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 200 OK\r",
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"skills\": [\r\n   \r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative- Retrieve user interest || None Exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 200 OK\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Validate the response message\r",
									"pm.test(\"Response message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Interests retrieved successfully\");\r",
									"});\r",
									"\r",
									"// Check if skills array exists and is empty\r",
									"pm.test(\"Interests list is empty\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"data\").that.is.an(\"array\").that.is.empty;\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Positive - delete specific interest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 204 No Content\r",
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"// Validate that the response body is empty\r",
									"pm.test(\"Response body should be empty\", function () {\r",
									"    pm.expect(pm.response.text()).to.be.empty;\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests?interests=Python",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							],
							"query": [
								{
									"key": "interests",
									"value": "Python"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative - delete interests || None exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 200 OK\r",
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"skills\": [\r\n   \r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative - delete specific interests || None exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 404 Not Found\r",
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"skills\": [\"quantumphysics\"\r\n   \r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests?interests=Quantumphysics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							],
							"query": [
								{
									"key": "interests",
									"value": "Quantumphysics"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative - Update Interests || Not Authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 401 Unauthorized\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"// Validate the error message\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Could not validate credentials\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{wrong_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"interests\": [\r\n    \"Python\",\r\n    \"JavaScript\",\r\n    \"React\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative - delete all interests || Not Authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 401 Unauthorized\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"// Validate the error message\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Could not validate credentials\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{wrong_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"skills\": [\r\n   \r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative- Retrieve user interest || Not Authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 401 Unauthorized\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"// Validate the error message\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Could not validate credentials\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{wrong_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative - Add interest || Not Authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 401 Unauthorized\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"// Validate the error message\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Could not validate credentials\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{wrong_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"skills\": [\r\n    \"Python\",\r\n    \"JavaScript\",\r\n    \"React\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edge - Add interest || Duplicate skills",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 200 OK\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// Validate the response message\r",
									"pm.test(\"Response message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Interests added successfully\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"interests\": [\r\n    \"Python\",\r\n    \"JavaScript\",\r\n    \"React\",\r\n    \"Python\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edge - Add interest || Numeric values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 200 OK\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// Validate the response message\r",
									"pm.test(\"Response message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Invalid input\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"interests\": [\r\n    \"Python\",\r\n    \"JavaScript\",\r\n    \"React\",\r\n    \"123456\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edge - Update Interests || Empty array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 200 OK\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// Validate the response message\r",
									"pm.test(\"Response message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Invalid input\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"skills\": []}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edge - Update Interests || Special characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 200 OK\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// Validate the response message\r",
									"pm.test(\"Response message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Invalid input\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"skills\": [\"$%#@!\"]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/interests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								"interests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edge - delete specific interest || mixed case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure response status is 204 No Content\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"// Validate the response message\r",
									"pm.test(\"Response message is correct\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Profile not found\");\r",
									"});\r",
									"\r",
									"// Validate response time (should be under 500ms for performance)\r",
									"pm.test(\"Response time is within limits\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/profile/me/?interests=AIJ",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"me",
								""
							],
							"query": [
								{
									"key": "interests",
									"value": "AIJ"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "tokenRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "scope",
				"value": "r_liteprofile%20r_emailaddress&",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "https://api.techie.love/api/v1/linkedin/login",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "https://dev.api.techie.love/api/v1/linkedin/auth/linkedin/callback",
				"type": "string"
			},
			{
				"key": "useBrowser",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://www.linkedin.com/oauth/v2/accessToken",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{vault:authorization-secret}}",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "techies",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "7718wdiv2kmpfr",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://dev.api.techie.love/api/v1"
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "wrong_access_token",
			"value": "\"\""
		},
		{
			"key": "accessToken",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwNjdlYTJiZS0zOGY4LTc4OTAtODAwMC1kZTNkMjMxOTcwM2EiLCJleHAiOjE3NDQ1NjkxOTAsInR5cGUiOiJhY2Nlc3MifQ.MHXReBg65mT4ZND43a-_Kp-MdQcLQhiQmHKJW9wI2ao"
		}
	]
}